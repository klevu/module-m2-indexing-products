stages:
  logStart:
    pipeline: Indexing\Stage\Log
    args:
      message: "Start Update Products Pipeline"
  iterateIndexingRecords:
    pipeline: Pipeline\Iterate
    args:
      continueOnException: ~
    stages:
      processIndexingRecordStart:
        stages:
          registerIndexingRecordToContext:
            pipeline: Stage\RegisterContext
            args:
              contextKey: "currentIndexingRecord"
          registerProductToContext:
            stages:
              extractProduct:
                pipeline: Stage\Extract
                args:
                  extraction: currentIndexingRecord::getEntity()
              registerProduct:
                pipeline: Stage\RegisterContext
                args:
                  contextKey: "currentProduct"
          registerParentProductToContext:
            stages:
              extractParentProduct:
                pipeline: Stage\Extract
                args:
                  extraction: currentIndexingRecord::getParent()
              registerParentProduct:
                pipeline: Stage\RegisterContext
                args:
                  contextKey: "currentParentProduct"
          registerActionToContext:
            stages:
              createAction:
                pipeline: Stage\StaticValue
                args:
                  value: "Update"
              registerAction:
                pipeline: Stage\RegisterContext
                args:
                  contextKey: "currentAction"
          registerEntityTypeToContext:
            stages:
              createEntityType:
                pipeline: Stage\StaticValue
                args:
                  value: "KLEVU_PRODUCT"
              registerEntityType:
                pipeline: Stage\RegisterContext
                args:
                  contextKey: "currentEntityType"
      processProduct:
        pipeline: Pipeline\CreateRecord
        stages:
          -
            pipeline: Pipeline\Fallback
            stages:
              variantProduct: # Simple products belonging to configurable products
                stages:
                  - pipeline: Stage\Extract
                    args:
                      extraction: currentParentProduct::
                  - pipeline: Stage\Validate
                    args:
                      validation: IsNotEmpty
                  - pipeline: Pipeline\CreateRecord
                    stages:
                      transformVariantProduct:
                        import: transform-product-variant.yml
              configurableProduct:
                stages:
                  -
                    pipeline: Stage\Extract
                    args:
                      extraction: currentProduct::getTypeId()
                  -
                    pipeline: Stage\Validate
                    args:
                      validation: IsEqualTo("configurable")
                  -
                    pipeline: Pipeline\CreateRecord
                    stages:
                      transformConfigurableProduct:
                        import: transform-product-configurable.yml
              groupedProduct:
                stages:
                  -
                    pipeline: Stage\Extract
                    args:
                      extraction: currentProduct::getTypeId()
                  -
                    pipeline: Stage\Validate
                    args:
                      validation: IsEqualTo("grouped")
                  -
                    pipeline: Pipeline\CreateRecord
                    stages:
                      transformGroupedProduct:
                        import: transform-product-grouped.yml
              bundleProduct:
                stages:
                  - pipeline: Stage\Extract
                    args:
                      extraction: currentProduct::getTypeId()
                  - pipeline: Stage\Validate
                    args:
                      validation: IsEqualTo("bundle")
                  - pipeline: Pipeline\CreateRecord
                    stages:
                      transformGroupedProduct:
                        import: transform-product-bundle.yml
              default:
                stages:
                  - pipeline: Pipeline\CreateRecord
                    stages:
                      transformDefaultProduct:
                        import: transform-product.yml
      mergeVariants:
        pipeline: Stage\Transform
        args:
          transformation: Flatten
  processPayload:
    stages:
      mergeRecords:
        pipeline: Stage\Transform
        args:
          transformation: Flatten
      processRecords:
        # import: Klevu_Indexing::etc/pipeline/process-batch-payload.yml
        import: ../../../module-m2-indexing/etc/pipeline/process-batch-payload.yml
  logEnd:
    pipeline: Indexing\Stage\Log
    args:
      message: "End Update Products Pipeline"
